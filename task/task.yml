---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: alpinelinux/docker-cli
    tag: latest

params:
  DNS_SUFFIX: ((dnssuffix))
  DOCKER_HOST: ((dockerhost))
  TEMP_VAULT_ROOT_TOKEN: ((tempvaultroottoken))
  TEMP_VAULT_IP: ((tempvaultip))

inputs:
  - name: vault_repo

run:
  path: sh
  args:
  - -c
  - |
    apk add curl
    cd vault_repo
    state="prep"
    stack="vault"
    service="vault"
    url="http://vault.${DNS_SUFFIX}"
    until [ $state == "complete" ]
    do
        echo "Current State=${state}"
        case $state in
            "prep")
                state="deploy"
                docker stack ps $stack > /dev/null 2>&1
                if [ $? -eq 0 ]
                then
                    state="cleanup"
                fi
                ;;
            "cleanup")
                state="deploy"
                docker stack rm $stack > /dev/null 2>&1
                if [ $? -ne 0 ]
                then
                    state="error"
                    exit 1
                fi
                sleep 2
                ;;
            "deploy")
                state="deploying"
                docker stack deploy -c docker-compose.yml $stack > /dev/null 2>&1
                if [ $? -ne 0 ]
                then
                    state="error"
                    exit 1
                fi
                ;;
            "deploying")
                state="deploying"
                service_state=`docker service ps ${stack}_${service} | awk 'FNR == 2 {print $6}'`
                if [ $service_state == "Running" ]
                then
                    state="running"
                fi
                sleep 2
                ;;
            "running")
                state="running"
                http_state=`curl -o /dev/null -Ls -f -w "%{http_code}" ${url}`
                if [ "$http_state" == "200" ]
                then
                    state="complete"
                fi
                sleep 2
                ;;
        esac
    done
    docker stack ls
    docker service ls
    apk add --update jq vault > /dev/null 2>&1
    chmod +x vault_init.sh
    chown root:root /usr/sbin/vault
    ash ./vault_init.sh
